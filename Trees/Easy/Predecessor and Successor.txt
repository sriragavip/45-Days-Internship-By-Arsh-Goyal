// This function finds predecessor and successor of key in BST.
// It sets pre and suc as predecessor and successor respectively
class Solution
{
    public:
    void findpre(Node* root,int key,Node* &curr){
        if(!root){
            return;
        }
        else{
            if(root->key < key){
                curr = root;
                findpre(root->right,key,curr);
            }
            else{
                findpre(root->left,key,curr);
            }
        }
    }
    void findsuc(Node* root,int key,Node* &curr){
        if(!root){
            return;
        }
        else{
            if(root->key > key){
                curr = root;
                findsuc(root->left,key,curr);
            }
            else{
                findsuc(root->right,key,curr);
            }
        }
    }
    void findPreSuc(Node* root, Node*& pre, Node*& suc, int key)
    {
        // Your code goes here
        findpre(root,key,pre);
        findsuc(root,key,suc);
    }
};